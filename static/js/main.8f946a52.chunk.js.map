{"version":3,"sources":["components/text.js","components/input.js","util/editingTypes.js","components/page.js","components/capture.js","components/guideButton.js","components/settings.js","components/guide.js","App.js","serviceWorker.js","index.js"],"names":["Text","dragHandlers","onStop","this","props","onDrag","handleDrag","bounds","textid","textId","className","onDoubleClick","editText","style","position","top","editLocation","y","left","x","children","React","Component","Input","onKeyPress","e","which","doneEditing","type","autoFocus","defaultValue","editValue","onChange","handleInput","onClick","Page","state","lines","isEditing","pendingLine","currentDraggedLine","editLine","bind","addLine","generateKey","updatedLine","createText","key","setState","target","getAttribute","clientX","window","innerWidth","clientY","innerHeight","getBoundingClientRect","stopPropagation","selectedText","editedLine","text","location","newKey","newLocation","Date","toISOString","trim","value","marginTop","Object","values","guides","Capture","capturePage","html2canvas","document","querySelector","then","canvas","body","appendChild","icon","faCameraRetro","GuideButton","guidesHidden","showGuides","hideGuides","Settings","Guide","orientation","axis","isHidden","display","App","useState","guidesArr","setGuidesArr","setGuidesHidden","visibleGuides","hiddenGuidesArr","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8f946a52.chunk.js","sourcesContent":["import React from 'react';\nimport Draggable from 'react-draggable';\n\nimport '../styles/text.css';\n\nclass Text extends React.Component{\n\n    render(){\n        const dragHandlers = {onStop: this.props.onStop, onDrag: this.props.handleDrag}\n        return(\n                <Draggable bounds=\"parent\" {...dragHandlers}>\n                    <div\n                        textid={this.props.textId}\n                        className=\"text\"\n                        onDoubleClick={this.props.editText}\n                        style={{\n                            position: 'absolute',\n                            top: this.props.editLocation ? `${this.props.editLocation.y}px` : '0px',\n                            left: this.props.editLocation ? `${this.props.editLocation.x}px` : '0px',\n                        }}\n                    >{this.props.children}</div>\n                </Draggable>      \n        )\n    }\n}\n\nexport default Text;","import React from 'react';\nimport '../styles/input.css';\n\nimport {\n    ADD_LINE,\n    EXIT,\n    REMOVE_LINE\n} from '../util/editingTypes';\n\nconst Input = props => {\n\n    const handleEnter = e => {\n        if(e.which === 13) props.doneEditing(ADD_LINE);\n    }\n\n    return(\n        <div className=\"input\" onKeyPress={handleEnter}\n            style={{\n            position: 'absolute',\n            top: `${props.editLocation.y}px`,\n            left: `${props.editLocation.x}px`\n        }}>\n            <input type=\"text\" autoFocus defaultValue={props.editValue} className=\"input-text\" onChange={props.handleInput}></input>\n            <button className=\"input-button add-button\" onClick={() => props.doneEditing(ADD_LINE)}>add</button>\n            <button className=\"input-button exit-button\" onClick={() => props.doneEditing(EXIT)}>exit</button>\n            <button className=\"input-button remove-button\" onClick={() => props.doneEditing(REMOVE_LINE)}>remove</button>\n        </div>     \n    )\n}\n\nexport default Input;","export const ADD_LINE = 'ADD_LINE';\nexport const EXIT = 'EXIT';\nexport const REMOVE_LINE = 'REMOVE_LINE';","import React from 'react';\nimport Text from './text';\nimport Input from './input';\nimport '../styles/page.css';\n\nimport {\n    ADD_LINE,\n    EXIT,\n    REMOVE_LINE\n} from '../util/editingTypes';\n\nclass Page extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            lines: {},\n            isEditing: false,\n            editValue: '',\n            pendingLine: '',\n            currentDraggedLine: '',\n            editLocation: {\n                x: '',\n                y: ''\n            }\n        }\n        this.editLine = this.editLine.bind(this);\n        this.doneEditing = this.doneEditing.bind(this);\n        this.handleInput = this.handleInput.bind(this);\n        this.editText = this.editText.bind(this);\n        this.addLine = this.addLine.bind(this);\n        this.generateKey = this.generateKey.bind(this);\n        this.onStop = this.onStop.bind(this);\n        this.handleDrag = this.handleDrag.bind(this);\n    }\n\n    onStop(){\n        if(this.state.currentDraggedLine){\n            const updatedLine = this.createText(\n                this.state.currentDraggedLine.props.children,\n                this.state.currentDraggedLine.key\n            );\n            this.setState({\n                lines: {\n                    ...this.state.lines,\n                    [updatedLine.key]: updatedLine\n                },\n                currentDraggedLine: '',\n            })\n        }\n    }\n\n    handleDrag(e){\n        if(!this.state.currentDraggedLine){\n            this.setState({\n                currentDraggedLine: this.state.lines[e.target.getAttribute(\"textid\")],\n            })\n        }\n    }\n\n    editLine(e){\n        if(!this.state.isEditing){\n            this.setState({ isEditing: true })\n            if(e.target.getAttribute('class') === 'page'){\n                this.setState({\n                  editLocation: {\n                    x: e.clientX - (window.innerWidth - 500) / 2,\n                    y: e.clientY - (window.innerHeight - 700) / 2\n                  }\n                })\n            }else {\n                this.setState({\n                  editLocation: {\n                    x: e.target.getBoundingClientRect().x - (window.innerWidth - 500) / 2,\n                    y: e.target.getBoundingClientRect().y - (window.innerHeight - 700) / 2\n                  }\n                });\n            }   \n        }   \n    }\n\n    editText(e){\n        e.stopPropagation();\n        this.editLine(e);\n        const selectedText = this.state.lines[e.target.getAttribute(\"textid\")];\n        this.setState({pendingLine: selectedText});\n        this.setState({lines: {...this.state.lines, [e.target.getAttribute('textid')]: ''}})\n        this.setState({editValue: selectedText.props.children});  \n    }\n\n    doneEditing(type){\n        switch(type){\n            case ADD_LINE:\n                this.addLine(this.state.editValue); \n                break;\n            case EXIT:\n                if(this.state.pendingLine){\n                    let editedLine = this.createText(this.state.pendingLine.props.children, this.state.pendingLine.key)\n                    this.setState({\n                        lines: {\n                            ...this.state.lines,\n                            [this.state.pendingLine.key]: editedLine\n                        }\n                    });\n                }\n                this.setState({pendingLine: ''});\n                break;\n            case REMOVE_LINE:\n                this.setState({\n                   lines: {\n                       ...this.state.lines,\n                        [this.state.pendingLine.key]: ''\n                   } \n                })\n                this.setState({ pendingLine: '' });\n                break;\n            default:\n        }\n\n        this.setState({isEditing: false})\n        this.setState({editValue: ''})\n        this.setState({pendingLine: ''})\n    }\n\n    createText(text, key, location){\n\n        const newKey = key? key : this.generateKey();\n        const newLocation = location? location : this.state.editLocation;\n        return (\n          <Text\n            editText={this.editText}\n            editLocation={newLocation}\n            onStop={this.onStop}\n            handleDrag={this.handleDrag}\n            key={newKey}\n            textId={newKey}\n          >{text}</Text>\n        );\n    }\n\n    generateKey(){\n        return new Date().toISOString();\n    }\n\n    addLine(text){\n        if(text.trim() !== ''){\n            const newKey = this.generateKey();\n            this.setState({ lines: {\n                ...this.state.lines, \n                [newKey]: this.createText(text, newKey)\n            }})\n        }   \n    }\n\n    handleInput(e){\n        this.setState({editValue: e.target.value})\n    }\n\n    render(){\n        return(         \n                <div className=\"page\" onDoubleClick={this.editLine} style={{marginTop: (window.innerHeight - 700) / 2 }}>\n                    {Object.values(this.state.lines)}\n                    {this.props.guides}\n                    {this.state.isEditing ?\n                        <Input\n                            doneEditing={this.doneEditing}\n                            handleInput={this.handleInput}\n                            editValue={this.state.editValue}\n                            editLocation={this.state.editLocation}\n                        />\n                        : ''\n                    }\n                </div>  \n        )   \n    }\n}\n\nexport default Page;","import React, { Fragment } from 'react';\nimport html2canvas from 'html2canvas';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCameraRetro } from '@fortawesome/free-solid-svg-icons';\n\nclass Capture extends React.Component{\n\n    constructor(props){\n        super(props)\n\n        this.capturePage = this.capturePage.bind(this);\n    }\n\n    capturePage() {\n        html2canvas(document.querySelector('.page'))\n         .then(canvas => {\n             document.body.appendChild(canvas);\n         })\n    }\n    render(){\n        return (\n          <Fragment>\n            <button onClick={this.capturePage} className=\"capture-button\">\n              <FontAwesomeIcon icon={faCameraRetro} />\n            </button>\n          </Fragment>\n        );\n    }\n}\n\nexport default Capture;","import React, { Fragment } from 'react';\n\nconst GuideButton = props => {\n    return (\n      <Fragment>\n        {props.guidesHidden ? (\n          <button className=\"guide-button\" onClick={props.showGuides}>show guides</button>\n        ) : (\n          <button className=\"guide-button\" onClick={props.hideGuides}>hide guides</button>\n        )}\n      </Fragment>\n    );\n}\n\nexport default GuideButton;","import React from 'react';\nimport Capture from './capture';\nimport GuideButton from './guideButton';\nimport '../styles/settings.css'\n\nconst Settings = props => {\n    return (\n      <div>\n        <Capture />\n        <GuideButton\n          showGuides={props.showGuides}\n          hideGuides={props.hideGuides}\n          guidesHidden={props.guidesHidden}\n        />\n      </div>\n    );\n}\n\nexport default Settings;","import React from 'react';\nimport Draggable from 'react-draggable';\nimport '../styles/guide.css';\n\nconst Guide = props => {\n\n  const renderGuides = () => {\n    if(props.orientation === 'vertical'){\n      return (\n        <Draggable axis=\"x\" bounds=\"parent\">\n          {props.isHidden ? (\n            <div className=\"guide-vertical\" style={{ display: \"none\" }}></div>\n          ) : (\n            <div className=\"guide-vertical\"></div>\n          )}\n        </Draggable>\n      );\n    } else {\n      return (\n        <Draggable axis=\"y\" bounds=\"parent\">\n          {props.isHidden ? (\n            <div className=\"guide-horizontal\" style={{ display: \"none\" }}></div>\n          ) : (\n            <div className=\"guide-horizontal\"></div>\n          )}\n        </Draggable>\n      );\n    }\n  }\n    return (\n      renderGuides()\n    );\n}\n\nexport default Guide;","import React, { Fragment, useState } from 'react';\nimport Page from './components/page'\nimport Settings from './components/settings';\nimport Guide from './components/guide';\nimport './App.css';\n\nfunction App() {\n\n  const [guidesArr, setGuidesArr] = useState([\n    <Guide orientation={'vertical'} isHidden={true} key={1}/>,\n    <Guide orientation={'vertical'} isHidden={true} key={2}/>,\n    <Guide orientation={'horizontal'} isHidden={true} key={3}/>,\n    <Guide orientation={'horizontal'} isHidden={true} key={4}/>\n  ]);\n  const [guidesHidden, setGuidesHidden] = useState(true);\n\n  const hideGuides = () => {\n    let hiddenGuidesArr = [\n      <Guide orientation={\"vertical\"} isHidden={true} key={1}/>,\n      <Guide orientation={\"vertical\"} isHidden={true} key={2}/>,\n      <Guide orientation={\"horizontal\"} isHidden={true} key={3}/>,\n      <Guide orientation={\"horizontal\"} isHidden={true} key={4}/>\n    ];\n    setGuidesArr(hiddenGuidesArr);\n    setGuidesHidden(true);\n  }\n\n  const showGuides = () => {\n    const visibleGuides = [\n      <Guide orientation={\"vertical\"} isHidden={false} key={1}/>,\n      <Guide orientation={\"vertical\"} isHidden={false} key={2}/>,\n      <Guide orientation={\"horizontal\"} isHidden={false} key={3}/>,\n      <Guide orientation={\"horizontal\"} isHidden={false} key={4}/>\n    ];\n    setGuidesArr(visibleGuides);\n    setGuidesHidden(false);\n  }\n\n\n  return (\n    <Fragment>\n      <Page guides={guidesArr}/>\n      <Settings showGuides={showGuides} hideGuides={hideGuides} guidesHidden={guidesHidden}/>\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}