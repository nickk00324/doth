{"version":3,"sources":["components/text.js","components/input.js","util/editingTypes.js","util/isMobileDevice.js","components/page.js","components/capture.js","components/guideButton.js","components/print.js","components/settings.js","components/guide.js","App.js","serviceWorker.js","index.js"],"names":["Text","dragHandlers","onStop","this","props","onDrag","handleDrag","bounds","textid","textId","className","onDoubleClick","editText","style","position","top","editLocation","y","left","x","children","React","Component","Input","onKeyPress","e","which","doneEditing","type","autoFocus","defaultValue","editValue","onChange","handleInput","onClick","isMobileDevice","window","orientation","navigator","userAgent","indexOf","Page","state","lines","isEditing","pendingLine","currentDraggedLine","editLine","bind","addLine","generateKey","updatedLine","createText","key","setState","target","getAttribute","pageSize","width","height","clientX","innerWidth","clientY","innerHeight","getBoundingClientRect","stopPropagation","selectedText","editedLine","text","location","newKey","newLocation","Date","toISOString","trim","value","marginTop","horizontalGuides","verticalGuides","Object","values","Capture","capturePage","icon","faCameraRetro","GuideButton","renderButton","faGripLines","faGripLinesVertical","guidesHidden","showGuides","hideGuides","Print","print","faPrint","Settings","guidesHiddenVertical","guidesHiddenHorizontal","Guide","axis","onGuideStop","isHidden","selectGuide","guideid","display","Modal","setAppElement","App","addEventListener","console","log","useState","setPageSize","verticalGuidePositions","setVerticalGuidePositions","horizontalGuidePositions","setHorizontalGuidePositions","generateGuides","positions","newGuides","i","push","setGuidesHiddenHorizontal","setGuidesHiddenVertical","setHorizontalGuides","setVerticalGuides","isModalOpen","setIsModalOpen","photo","setPhoto","closeModal","saveGuidePositions","guides","document","querySelectorAll","forEach","guide","useEffect","offset","querySelector","offsetHeight","defaultStyles","overlay","modalStyles","content","margin","padding","backgroundColor","isOpen","onRequestClose","transparent","portalClassName","faTimesCircle","src","alt","html2canvas","scale","then","canvas","toDataURL","Boolean","hostname","match","ReactDOM","render","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.75c44061.chunk.js","sourcesContent":["import React from 'react';\nimport Draggable from 'react-draggable';\n\nimport '../styles/text.css';\n\nclass Text extends React.Component{\n\n    render(){\n        const dragHandlers = {onStop: this.props.onStop, onDrag: this.props.handleDrag}\n        return(\n                <Draggable bounds=\"parent\" {...dragHandlers}>\n                    <div\n                        textid={this.props.textId}\n                        className=\"text\"\n                        onDoubleClick={this.props.editText}\n                        style={{\n                            position: 'absolute',\n                            top: this.props.editLocation ? `${this.props.editLocation.y}px` : '0px',\n                            left: this.props.editLocation ? `${this.props.editLocation.x}px` : '0px',\n                        }}\n                    >{this.props.children}</div>\n                </Draggable>      \n        )\n    }\n}\n\nexport default Text;","import React from 'react';\nimport '../styles/input.css';\n\nimport {\n    ADD_LINE,\n    EXIT,\n    REMOVE_LINE\n} from '../util/editingTypes';\n\nconst Input = props => {\n\n    const handleEnter = e => {\n        if(e.which === 13) props.doneEditing(ADD_LINE);\n    }\n\n    return(\n        <div className=\"input\" onKeyPress={handleEnter}\n            style={{\n            position: 'absolute',\n            top: `${props.editLocation.y}px`,\n            left: `${props.editLocation.x}px`\n        }}>\n            <input type=\"text\" autoFocus defaultValue={props.editValue} className=\"input-text\" onChange={props.handleInput}></input>\n            <button className=\"input-button add-button\" onClick={() => props.doneEditing(ADD_LINE)}>add</button>\n            <button className=\"input-button exit-button\" onClick={() => props.doneEditing(EXIT)}>exit</button>\n            <button className=\"input-button remove-button\" onClick={() => props.doneEditing(REMOVE_LINE)}>remove</button>\n        </div>     \n    )\n}\n\nexport default Input;","export const ADD_LINE = 'ADD_LINE';\nexport const EXIT = 'EXIT';\nexport const REMOVE_LINE = 'REMOVE_LINE';","export const isMobileDevice = () => {\n    return (\n      typeof window.orientation !== \"undefined\" ||\n      navigator.userAgent.indexOf(\"IEMobile\") !== -1\n    );\n}","import React from 'react';\nimport Text from './text';\nimport Input from './input';\nimport '../styles/page.css';\nimport { isMobileDevice } from '../util/isMobileDevice';\n\nimport {\n    ADD_LINE,\n    EXIT,\n    REMOVE_LINE\n} from '../util/editingTypes';\n\nclass Page extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            lines: {},\n            isEditing: false,\n            editValue: '',\n            pendingLine: '',\n            currentDraggedLine: '',\n            editLocation: {\n                x: '',\n                y: ''\n            }\n        }\n        this.editLine = this.editLine.bind(this);\n        this.doneEditing = this.doneEditing.bind(this);\n        this.handleInput = this.handleInput.bind(this);\n        this.editText = this.editText.bind(this);\n        this.addLine = this.addLine.bind(this);\n        this.generateKey = this.generateKey.bind(this);\n        this.onStop = this.onStop.bind(this);\n        this.handleDrag = this.handleDrag.bind(this);\n    }\n\n    onStop(){\n        if(this.state.currentDraggedLine){\n            const updatedLine = this.createText(\n                this.state.currentDraggedLine.props.children,\n                this.state.currentDraggedLine.key\n            );\n            this.setState({\n                lines: {\n                    ...this.state.lines,\n                    [updatedLine.key]: updatedLine\n                },\n                currentDraggedLine: '',\n            })\n        }\n    }\n\n    handleDrag(e){\n        if(!this.state.currentDraggedLine){\n            this.setState({\n                currentDraggedLine: this.state.lines[e.target.getAttribute(\"textid\")],\n            })\n        }\n    }\n\n    editLine(e){\n        const {width, height} = this.props.pageSize;\n        if(!this.state.isEditing){\n            this.setState({ isEditing: true })\n            if(e.target.getAttribute('class') === 'page'){\n                this.setState({\n                  editLocation: {\n                    x: e.clientX - (window.innerWidth - width) / 2,\n                    y: e.clientY - (window.innerHeight - height) / 2\n                  }\n                })\n            }else {\n                this.setState({\n                  editLocation: {\n                    x: e.target.getBoundingClientRect().x - (window.innerWidth - width) / 2,\n                    y: e.target.getBoundingClientRect().y - (window.innerHeight - height) / 2\n                  }\n                });\n            }   \n        }   \n    }\n\n    editText(e){\n        e.stopPropagation();\n        this.editLine(e);\n        const selectedText = this.state.lines[e.target.getAttribute(\"textid\")];\n        this.setState({pendingLine: selectedText});\n        this.setState({lines: {...this.state.lines, [e.target.getAttribute('textid')]: ''}})\n        this.setState({editValue: selectedText.props.children});  \n    }\n\n    doneEditing(type){\n        switch(type){\n            case ADD_LINE:\n                this.addLine(this.state.editValue); \n                break;\n            case EXIT:\n                if(this.state.pendingLine){\n                    let editedLine = this.createText(this.state.pendingLine.props.children, this.state.pendingLine.key)\n                    this.setState({\n                        lines: {\n                            ...this.state.lines,\n                            [this.state.pendingLine.key]: editedLine\n                        }\n                    });\n                }\n                this.setState({pendingLine: ''});\n                break;\n            case REMOVE_LINE:\n                this.setState({\n                   lines: {\n                       ...this.state.lines,\n                        [this.state.pendingLine.key]: ''\n                   } \n                })\n                this.setState({ pendingLine: '' });\n                break;\n            default:\n        }\n\n        this.setState({isEditing: false})\n        this.setState({editValue: ''})\n        this.setState({pendingLine: ''})\n    }\n\n    createText(text, key, location){\n        const newKey = key? key : this.generateKey();\n        const newLocation = location? location : this.state.editLocation;\n        return (\n          <Text\n            editText={this.editText}\n            editLocation={newLocation}\n            onStop={this.onStop}\n            handleDrag={this.handleDrag}\n            key={newKey}\n            textId={newKey}\n          >{text}</Text>\n        );\n    }\n\n    generateKey(){\n        return new Date().toISOString();\n    }\n\n    addLine(text){\n        if(text.trim() !== ''){\n            const newKey = this.generateKey();\n            this.setState({ lines: {\n                ...this.state.lines, \n                [newKey]: this.createText(text, newKey)\n            }})\n        }   \n    }\n\n    handleInput(e){\n        this.setState({editValue: e.target.value})\n    }\n\n    render(){\n        const {width, height} = this.props.pageSize;\n        const marginTop = isMobileDevice()? \n            '0px' : `${(window.innerHeight - height) / 2}px`\n        return (\n          <div\n            className=\"page\"\n            onDoubleClick={this.editLine}\n            style={{\n              marginTop: marginTop,\n              height: `${height}px`,\n              width: `${width}px`\n            }}\n          >\n            {this.props.horizontalGuides}\n            {this.props.verticalGuides}\n            {Object.values(this.state.lines)}\n            {this.state.isEditing ? (\n              <Input\n                doneEditing={this.doneEditing}\n                handleInput={this.handleInput}\n                editValue={this.state.editValue}\n                editLocation={this.state.editLocation}\n              />\n            ) : (\n              \"\"\n            )}\n          </div>\n        );   \n    }\n}\n\nexport default Page;","import React, { Fragment } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCameraRetro } from '@fortawesome/free-solid-svg-icons';\n\nconst Capture = props => {\n        return (\n          <Fragment>\n            <button onClick={props.capturePage} className=\"capture-button icon-button\">\n              <div className=\"icon\">\n                <FontAwesomeIcon icon={faCameraRetro} />\n              </div>\n            </button>\n          </Fragment>\n        );\n}\n\nexport default Capture;","import React, { Fragment } from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGripLines, faGripLinesVertical } from \"@fortawesome/free-solid-svg-icons\";\n\nconst GuideButton = props => {\n  const renderButton = () => {\n    if(props.orientation === 'horizontal'){\n      return <FontAwesomeIcon icon={faGripLines} />\n    }else{\n      return <FontAwesomeIcon icon={faGripLinesVertical} />;\n    }\n  }\n    return (\n      <Fragment>\n        {props.guidesHidden ? (\n          <button\n            className=\"guide-button icon-button\"\n            onClick={() => props.showGuides(props.orientation)}\n          >\n            <div className=\"icon\">\n              {renderButton()}\n            </div>\n          </button>\n        ) : (\n          <button\n            className=\"guide-button icon-button\"\n            onClick={() => props.hideGuides(props.orientation)}\n          >\n            <div className=\"icon\">\n              {renderButton()}\n            </div>\n          </button>\n        )}\n      </Fragment>\n    );\n}\n\nexport default GuideButton;","import React from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPrint } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Print = props => (\n    <button className=\"print-button icon-button\" onClick={window.print}>\n        <div className=\"icon\"><FontAwesomeIcon icon={faPrint} /></div>\n    </button>\n)\n\nexport default Print","import React from 'react';\nimport Capture from './capture';\nimport GuideButton from './guideButton';\nimport Print from './print';\nimport '../styles/settings.css'\n\nconst Settings = props => {\n\n    return (\n      <div className=\"settings\" style={{ width: `${props.pageSize.width}px` }}>\n        <Print />\n        <Capture capturePage={props.capturePage}/>\n        <GuideButton\n          showGuides={props.showGuides}\n          hideGuides={props.hideGuides}\n          guidesHidden={props.guidesHiddenVertical}\n          orientation={\"vertical\"}\n        />\n        <GuideButton\n          showGuides={props.showGuides}\n          hideGuides={props.hideGuides}\n          guidesHidden={props.guidesHiddenHorizontal}\n          orientation={\"horizontal\"}\n        />\n      </div>\n    );\n}\n\nexport default Settings;","import React from 'react';\nimport Draggable from 'react-draggable';\nimport '../styles/guide.css';\n\nconst Guide = props => {\n\n\n  const renderGuides = () => {\n    \n    if(props.orientation === 'vertical'){\n      return (\n        <Draggable axis=\"x\" bounds=\"parent\" onStop={props.onGuideStop}>\n          {props.isHidden ? (\n            <div\n              className=\"guide-vertical guide\"\n              onClick={props.selectGuide}\n              guideid={props.guideid}\n              style={{\n                display: \"none\",\n                height: `${props.pageSize.height}px`,\n                left: `${props.position}px`\n              }}\n            ></div>\n          ) : (\n            <div\n              className=\"guide-vertical guide\"\n              onClick={props.selectGuide}\n              guideid={props.guideid}\n              style={{\n                height: `${props.pageSize.height}px`,\n                left: `${props.position}px`\n              }}\n            ></div>\n          )}\n        </Draggable>\n      );\n    } else {\n      return (\n        <Draggable axis=\"y\" bounds=\"parent\" onStop={props.onGuideStop}>\n          {props.isHidden ? (\n            <div\n              className=\"guide-horizontal guide\"\n              onClick={props.selectGuide}\n              guideid={props.guideid}\n              style={{\n                display: \"none\",\n                width: `${props.pageSize.width}px`,\n                top: `${props.position}px`\n              }}\n            ></div>\n          ) : (\n            <div\n              className=\"guide-horizontal guide\"\n              onClick={props.selectGuide}\n              guideid={props.guideid}\n              style={{\n                width: `${props.pageSize.width}px`,\n                top: `${props.position}px`\n              }}\n            ></div>\n          )}\n        </Draggable>\n      );\n    }\n  }\n    return (\n      renderGuides()\n    );\n}\n\nexport default Guide;","import React, { Fragment, useState } from 'react';\nimport Page from './components/page'\nimport Settings from './components/settings';\nimport Guide from './components/guide';\nimport Modal from 'react-modal';\nimport html2canvas from 'html2canvas';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { isMobileDevice } from './util/isMobileDevice';\nimport './App.css';\n\nModal.setAppElement('#root');\n\n\nfunction App() {\n\n  window.addEventListener(\"resize\", () =>\n    console.log(\"please don't resize the window, because that makes everything wonky\")\n  );\n\n  const [pageSize, setPageSize] = useState({\n    width: 500,\n    height: 700\n  });\n\n  const [verticalGuidePositions, setVerticalGuidePositions] = useState([\n    pageSize.width / 2,\n    pageSize.width / 2\n  ])\n  const [horizontalGuidePositions, setHorizontalGuidePositions] = useState([\n    pageSize.height / 2,\n    pageSize.height / 2\n  ])\n\n  \n  const generateGuides = (orientation, isHidden) => {\n    let positions = orientation === 'horizontal' ? \n      horizontalGuidePositions\n      : verticalGuidePositions\n    let newGuides = [];\n    for (let i = 0; i < 2; i++) {\n      let key = i + new Date().toISOString();\n      newGuides.push(\n          <Guide\n          pageSize={pageSize}\n          orientation={orientation}\n          isHidden={isHidden}\n          key={key}\n          guideid={key}\n          position={positions[i]}\n        />\n      );\n      //positions.shift();\n    }\n    return newGuides;\n  };\n\n  const [guidesHiddenHorizontal, setGuidesHiddenHorizontal] = useState(true);\n  const [guidesHiddenVertical, setGuidesHiddenVertical] = useState(true);\n  const [horizontalGuides, setHorizontalGuides] = useState(generateGuides('horizontal', true));\n  const [verticalGuides, setVerticalGuides] = useState(generateGuides('vertical', true));\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [photo, setPhoto] = useState('');\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  }\n\n  const closeModal = () => {\n    setIsModalOpen(false)\n  }\n\n  function capturePage() {\n    html2canvas(document.querySelector('.page'), { scale: 4})\n      .then(canvas => {\n        setPhoto(canvas.toDataURL())\n    })\n    openModal();\n  }\n\n  React.useEffect(() => {\n    if(isMobileDevice()){\n      let settings = document.querySelector('.settings');\n      let offset = settings.offsetHeight\n      setPageSize({\n        width: window.innerWidth,\n        height: window.innerHeight - offset - 30\n      })\n      Modal.defaultStyles.overlay.width = `${window.innerWidth}px`;\n      Modal.defaultStyles.overlay.height = `${window.innerHeight}px`\n    }\n  }, [])\n\n  const hideGuides = (orientation) => {\n    if(orientation === 'horizontal'){\n      setHorizontalGuides(generateGuides(orientation, true));\n      setGuidesHiddenHorizontal(true);\n      saveGuidePositions(orientation);\n    }else {\n      setVerticalGuides(generateGuides(orientation, true));\n      setGuidesHiddenVertical(true);\n      saveGuidePositions(orientation);\n    }\n  }\n\n  function saveGuidePositions(orientation){\n    let guides = document.querySelectorAll(`.guide-${orientation}`);\n    let positions = [];\n    if(orientation === 'horizontal'){\n      guides.forEach(guide => {\n        positions.push(\n          guide.getBoundingClientRect().y - (window.innerHeight - pageSize.height) / 2\n        )})\n      setHorizontalGuidePositions(positions);\n    }else{\n      guides.forEach(guide => {\n        positions.push(\n          guide.getBoundingClientRect().x - (window.innerWidth - pageSize.width) / 2\n      )})\n      setVerticalGuidePositions(positions);\n    }\n\n  }\n\n  const showGuides = (orientation) => {\n    if(orientation === 'horizontal'){\n      setHorizontalGuides(generateGuides(orientation, false));\n      setGuidesHiddenHorizontal(false);\n    }else {\n      setVerticalGuides(generateGuides(orientation, false));\n      setGuidesHiddenVertical(false);\n    }\n  }\n\n  const modalStyles = isMobileDevice()? {\n    content: {\n      width: `${pageSize.width - 50}px`,\n      height: `${pageSize.height - 70}px`,\n      margin: '0 auto',\n      padding: '0',\n      position: 'fixed'\n    }\n  }\n  :\n  {\n    content: {\n      width: `${pageSize.width}px`,\n      height: `${pageSize.height}px`,\n      margin: `40px auto`,\n      padding: '0'\n    }\n  };\n\n  Modal.defaultStyles.overlay.backgroundColor = 'pink'\n\n  return (\n    <Fragment>\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={closeModal}\n        transparent={true}\n        style={modalStyles}\n        portalClassName=\"modal\"\n      >\n        <button className=\"icon-button modal-close\" onClick={closeModal}>\n          <FontAwesomeIcon icon={faTimesCircle} />\n        </button>\n        {isMobileDevice() ? (\n          <img\n            className=\"capture-img\"\n            src={photo}\n            width={`${pageSize.width - 100}px`}\n            alt=\"your poem silly!\"\n          />\n        ) : (\n          <img\n            className=\"capture-img\"\n            src={photo}\n            height={`${pageSize.height}px`}\n            width={`${pageSize.width}px`}\n            alt=\"your poem silly!\"\n          />\n        )}\n      </Modal>\n\n      <Page\n        pageSize={pageSize}\n        horizontalGuides={horizontalGuides}\n        verticalGuides={verticalGuides}\n      />\n      <Settings\n        pageSize={pageSize}\n        showGuides={showGuides}\n        hideGuides={hideGuides}\n        guidesHiddenHorizontal={guidesHiddenHorizontal}\n        guidesHiddenVertical={guidesHiddenVertical}\n        capturePage={capturePage}\n      />\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}