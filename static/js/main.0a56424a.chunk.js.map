{"version":3,"sources":["components/text.js","components/input.js","util/editingTypes.js","components/page.js","components/capture.js","components/guideButton.js","components/print.js","components/settings.js","components/guide.js","App.js","serviceWorker.js","index.js"],"names":["Text","dragHandlers","onStop","this","props","onDrag","handleDrag","bounds","textid","textId","className","onDoubleClick","editText","style","position","top","editLocation","y","left","x","children","React","Component","Input","onKeyPress","e","which","doneEditing","type","autoFocus","defaultValue","editValue","onChange","handleInput","onClick","Page","state","lines","isEditing","pendingLine","currentDraggedLine","editLine","bind","addLine","generateKey","updatedLine","createText","key","setState","target","getAttribute","pageSize","width","height","clientX","window","innerWidth","clientY","innerHeight","getBoundingClientRect","stopPropagation","selectedText","editedLine","text","location","newKey","newLocation","Date","toISOString","trim","value","marginTop","Object","values","horizontalGuides","verticalGuides","Capture","capturePage","icon","faCameraRetro","GuideButton","renderButton","orientation","faGripLines","faGripLinesVertical","guidesHidden","showGuides","hideGuides","Print","print","faPrint","Settings","guidesHiddenVertical","guidesHiddenHorizontal","Guide","axis","onGuideStop","isHidden","selectGuide","guideid","display","Modal","setAppElement","App","useState","setPageSize","verticalGuidePositions","setVerticalGuidePositions","horizontalGuidePositions","setHorizontalGuidePositions","generateGuides","positions","newGuides","i","push","setGuidesHiddenHorizontal","setGuidesHiddenVertical","setHorizontalGuides","setVerticalGuides","isModalOpen","setIsModalOpen","photo","setPhoto","closeModal","saveGuidePositions","guides","document","querySelectorAll","forEach","guide","console","log","useEffect","navigator","userAgent","indexOf","isOpen","onRequestClose","content","zIndex","textAlign","backgroundColor","faTimesCircle","src","alt","html2canvas","querySelector","scale","then","canvas","toDataURL","Boolean","hostname","match","ReactDOM","render","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0a56424a.chunk.js","sourcesContent":["import React from 'react';\nimport Draggable from 'react-draggable';\n\nimport '../styles/text.css';\n\nclass Text extends React.Component{\n\n    render(){\n        const dragHandlers = {onStop: this.props.onStop, onDrag: this.props.handleDrag}\n        return(\n                <Draggable bounds=\"parent\" {...dragHandlers}>\n                    <div\n                        textid={this.props.textId}\n                        className=\"text\"\n                        onDoubleClick={this.props.editText}\n                        style={{\n                            position: 'absolute',\n                            top: this.props.editLocation ? `${this.props.editLocation.y}px` : '0px',\n                            left: this.props.editLocation ? `${this.props.editLocation.x}px` : '0px',\n                        }}\n                    >{this.props.children}</div>\n                </Draggable>      \n        )\n    }\n}\n\nexport default Text;","import React from 'react';\nimport '../styles/input.css';\n\nimport {\n    ADD_LINE,\n    EXIT,\n    REMOVE_LINE\n} from '../util/editingTypes';\n\nconst Input = props => {\n\n    const handleEnter = e => {\n        if(e.which === 13) props.doneEditing(ADD_LINE);\n    }\n\n    return(\n        <div className=\"input\" onKeyPress={handleEnter}\n            style={{\n            position: 'absolute',\n            top: `${props.editLocation.y}px`,\n            left: `${props.editLocation.x}px`\n        }}>\n            <input type=\"text\" autoFocus defaultValue={props.editValue} className=\"input-text\" onChange={props.handleInput}></input>\n            <button className=\"input-button add-button\" onClick={() => props.doneEditing(ADD_LINE)}>add</button>\n            <button className=\"input-button exit-button\" onClick={() => props.doneEditing(EXIT)}>exit</button>\n            <button className=\"input-button remove-button\" onClick={() => props.doneEditing(REMOVE_LINE)}>remove</button>\n        </div>     \n    )\n}\n\nexport default Input;","export const ADD_LINE = 'ADD_LINE';\nexport const EXIT = 'EXIT';\nexport const REMOVE_LINE = 'REMOVE_LINE';","import React from 'react';\nimport Text from './text';\nimport Input from './input';\nimport '../styles/page.css';\n\nimport {\n    ADD_LINE,\n    EXIT,\n    REMOVE_LINE\n} from '../util/editingTypes';\n\nclass Page extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            lines: {},\n            isEditing: false,\n            editValue: '',\n            pendingLine: '',\n            currentDraggedLine: '',\n            editLocation: {\n                x: '',\n                y: ''\n            }\n        }\n        this.editLine = this.editLine.bind(this);\n        this.doneEditing = this.doneEditing.bind(this);\n        this.handleInput = this.handleInput.bind(this);\n        this.editText = this.editText.bind(this);\n        this.addLine = this.addLine.bind(this);\n        this.generateKey = this.generateKey.bind(this);\n        this.onStop = this.onStop.bind(this);\n        this.handleDrag = this.handleDrag.bind(this);\n    }\n\n    onStop(){\n        if(this.state.currentDraggedLine){\n            const updatedLine = this.createText(\n                this.state.currentDraggedLine.props.children,\n                this.state.currentDraggedLine.key\n            );\n            this.setState({\n                lines: {\n                    ...this.state.lines,\n                    [updatedLine.key]: updatedLine\n                },\n                currentDraggedLine: '',\n            })\n        }\n    }\n\n    handleDrag(e){\n        if(!this.state.currentDraggedLine){\n            this.setState({\n                currentDraggedLine: this.state.lines[e.target.getAttribute(\"textid\")],\n            })\n        }\n    }\n\n    editLine(e){\n        const {width, height} = this.props.pageSize;\n        if(!this.state.isEditing){\n            this.setState({ isEditing: true })\n            if(e.target.getAttribute('class') === 'page'){\n                this.setState({\n                  editLocation: {\n                    x: e.clientX - (window.innerWidth - width) / 2,\n                    y: e.clientY - (window.innerHeight - height) / 2\n                  }\n                })\n            }else {\n                this.setState({\n                  editLocation: {\n                    x: e.target.getBoundingClientRect().x - (window.innerWidth - width) / 2,\n                    y: e.target.getBoundingClientRect().y - (window.innerHeight - height) / 2\n                  }\n                });\n            }   \n        }   \n    }\n\n    editText(e){\n        e.stopPropagation();\n        this.editLine(e);\n        const selectedText = this.state.lines[e.target.getAttribute(\"textid\")];\n        this.setState({pendingLine: selectedText});\n        this.setState({lines: {...this.state.lines, [e.target.getAttribute('textid')]: ''}})\n        this.setState({editValue: selectedText.props.children});  \n    }\n\n    doneEditing(type){\n        switch(type){\n            case ADD_LINE:\n                this.addLine(this.state.editValue); \n                break;\n            case EXIT:\n                if(this.state.pendingLine){\n                    let editedLine = this.createText(this.state.pendingLine.props.children, this.state.pendingLine.key)\n                    this.setState({\n                        lines: {\n                            ...this.state.lines,\n                            [this.state.pendingLine.key]: editedLine\n                        }\n                    });\n                }\n                this.setState({pendingLine: ''});\n                break;\n            case REMOVE_LINE:\n                this.setState({\n                   lines: {\n                       ...this.state.lines,\n                        [this.state.pendingLine.key]: ''\n                   } \n                })\n                this.setState({ pendingLine: '' });\n                break;\n            default:\n        }\n\n        this.setState({isEditing: false})\n        this.setState({editValue: ''})\n        this.setState({pendingLine: ''})\n    }\n\n    createText(text, key, location){\n        const newKey = key? key : this.generateKey();\n        const newLocation = location? location : this.state.editLocation;\n        return (\n          <Text\n            editText={this.editText}\n            editLocation={newLocation}\n            onStop={this.onStop}\n            handleDrag={this.handleDrag}\n            key={newKey}\n            textId={newKey}\n          >{text}</Text>\n        );\n    }\n\n    generateKey(){\n        return new Date().toISOString();\n    }\n\n    addLine(text){\n        if(text.trim() !== ''){\n            const newKey = this.generateKey();\n            this.setState({ lines: {\n                ...this.state.lines, \n                [newKey]: this.createText(text, newKey)\n            }})\n        }   \n    }\n\n    handleInput(e){\n        this.setState({editValue: e.target.value})\n    }\n\n    render(){\n        const {width, height} = this.props.pageSize;\n        return(         \n                <div className=\"page\" onDoubleClick={this.editLine} style={{marginTop: (window.innerHeight - height) / 2, height: `${height}px`, width: `${width}px` }}>\n                    {Object.values(this.state.lines)}\n                    {this.props.horizontalGuides}\n                    {this.props.verticalGuides}\n                    {this.state.isEditing ?\n                        <Input\n                            doneEditing={this.doneEditing}\n                            handleInput={this.handleInput}\n                            editValue={this.state.editValue}\n                            editLocation={this.state.editLocation}\n                        />\n                        : ''\n                    }\n                </div>  \n        )   \n    }\n}\n\nexport default Page;","import React, { Fragment } from 'react';\nimport html2canvas from 'html2canvas';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCameraRetro } from '@fortawesome/free-solid-svg-icons';\n\nconst Capture = props => {\n        return (\n          <Fragment>\n            <button onClick={props.capturePage} className=\"capture-button icon-button\">\n              <div className=\"icon\">\n                <FontAwesomeIcon icon={faCameraRetro} />\n              </div>\n            </button>\n          </Fragment>\n        );\n}\n\nexport default Capture;","import React, { Fragment } from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGripLines, faGripLinesVertical } from \"@fortawesome/free-solid-svg-icons\";\n\nconst GuideButton = props => {\n  const renderButton = () => {\n    if(props.orientation === 'horizontal'){\n      return <FontAwesomeIcon icon={faGripLines} />\n    }else{\n      return <FontAwesomeIcon icon={faGripLinesVertical} />;\n    }\n  }\n    return (\n      <Fragment>\n        {props.guidesHidden ? (\n          <button\n            className=\"guide-button icon-button\"\n            onClick={() => props.showGuides(props.orientation)}\n          >\n            <div className=\"icon\">\n              {renderButton()}\n            </div>\n          </button>\n        ) : (\n          <button\n            className=\"guide-button icon-button\"\n            onClick={() => props.hideGuides(props.orientation)}\n          >\n            <div className=\"icon\">\n              {renderButton()}\n            </div>\n          </button>\n        )}\n      </Fragment>\n    );\n}\n\nexport default GuideButton;","import React from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPrint } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Print = props => (\n    <button className=\"print-button icon-button\" onClick={window.print}>\n        <div className=\"icon\"><FontAwesomeIcon icon={faPrint} /></div>\n    </button>\n)\n\nexport default Print","import React from 'react';\nimport Capture from './capture';\nimport GuideButton from './guideButton';\nimport Print from './print';\nimport '../styles/settings.css'\n\nconst Settings = props => {\n\n    return (\n      <div className=\"settings\" style={{ width: `${props.pageSize.width}px` }}>\n        <Print />\n        <Capture capturePage={props.capturePage}/>\n        <GuideButton\n          showGuides={props.showGuides}\n          hideGuides={props.hideGuides}\n          guidesHidden={props.guidesHiddenVertical}\n          orientation={\"vertical\"}\n        />\n        <GuideButton\n          showGuides={props.showGuides}\n          hideGuides={props.hideGuides}\n          guidesHidden={props.guidesHiddenHorizontal}\n          orientation={\"horizontal\"}\n        />\n      </div>\n    );\n}\n\nexport default Settings;","import React from 'react';\nimport Draggable from 'react-draggable';\nimport '../styles/guide.css';\n\nconst Guide = props => {\n\n\n  const renderGuides = () => {\n    \n    if(props.orientation === 'vertical'){\n      return (\n        <Draggable axis=\"x\" bounds=\"parent\" onStop={props.onGuideStop}>\n          {props.isHidden ? (\n            <div\n              className=\"guide-vertical guide\"\n              onClick={props.selectGuide}\n              guideid={props.guideid}\n              style={{\n                display: \"none\",\n                height: `${props.pageSize.height}px`,\n                left: `${props.position}px`\n              }}\n            ></div>\n          ) : (\n            <div\n              className=\"guide-vertical guide\"\n              onClick={props.selectGuide}\n              guideid={props.guideid}\n              style={{\n                height: `${props.pageSize.height}px`,\n                left: `${props.position}px`\n              }}\n            ></div>\n          )}\n        </Draggable>\n      );\n    } else {\n      return (\n        <Draggable axis=\"y\" bounds=\"parent\" onStop={props.onGuideStop}>\n          {props.isHidden ? (\n            <div\n              className=\"guide-horizontal guide\"\n              onClick={props.selectGuide}\n              guideid={props.guideid}\n              style={{\n                display: \"none\",\n                width: `${props.pageSize.width}px`,\n                top: `${props.position}px`\n              }}\n            ></div>\n          ) : (\n            <div\n              className=\"guide-horizontal guide\"\n              onClick={props.selectGuide}\n              guideid={props.guideid}\n              style={{\n                width: `${props.pageSize.width}px`,\n                top: `${props.position}px`\n              }}\n            ></div>\n          )}\n        </Draggable>\n      );\n    }\n  }\n    return (\n      renderGuides()\n    );\n}\n\nexport default Guide;","import React, { Fragment, useState } from 'react';\nimport Page from './components/page'\nimport Settings from './components/settings';\nimport Guide from './components/guide';\nimport Modal from 'react-modal';\nimport html2canvas from 'html2canvas';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport './App.css';\n\nModal.setAppElement('#root')\n\nfunction App() {\n\n  const [pageSize, setPageSize] = useState({\n    width: 500,\n    height: 700\n  });\n\n  const [verticalGuidePositions, setVerticalGuidePositions] = useState([\n    pageSize.width / 2,\n    pageSize.width / 2\n  ])\n  const [horizontalGuidePositions, setHorizontalGuidePositions] = useState([\n    pageSize.height / 2,\n    pageSize.height / 2\n  ])\n\n  \n  const generateGuides = (orientation, isHidden) => {\n    let positions = orientation === 'horizontal' ? \n      horizontalGuidePositions\n      : verticalGuidePositions\n    let newGuides = [];\n    for (let i = 0; i < 2; i++) {\n      let key = i + new Date().toISOString();\n      newGuides.push(\n          <Guide\n          pageSize={pageSize}\n          orientation={orientation}\n          isHidden={isHidden}\n          key={key}\n          guideid={key}\n          position={positions[i]}\n        />\n      );\n      //positions.shift();\n    }\n    return newGuides;\n  };\n\n  const isMobileDevice = () => {\n    return (\n      typeof window.orientation !== \"undefined\" ||\n      navigator.userAgent.indexOf(\"IEMobile\") !== -1\n    );\n  };\n\n  const [guidesHiddenHorizontal, setGuidesHiddenHorizontal] = useState(true);\n  const [guidesHiddenVertical, setGuidesHiddenVertical] = useState(true);\n  const [horizontalGuides, setHorizontalGuides] = useState(generateGuides('horizontal', true));\n  const [verticalGuides, setVerticalGuides] = useState(generateGuides('vertical', true));\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [photo, setPhoto] = useState('');\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  }\n\n  const closeModal = () => {\n    setIsModalOpen(false)\n  }\n\n  function capturePage() {\n    html2canvas(document.querySelector('.page'), { scale: 4})\n      .then(canvas => {\n        setPhoto(canvas.toDataURL())\n    })\n    openModal();\n  }\n\n  React.useEffect(() => {\n    if(isMobileDevice()){\n      setPageSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      })\n    }\n  }, [])\n\n  const hideGuides = (orientation) => {\n    if(orientation === 'horizontal'){\n      setHorizontalGuides(generateGuides(orientation, true));\n      setGuidesHiddenHorizontal(true);\n      saveGuidePositions(orientation);\n    }else {\n      setVerticalGuides(generateGuides(orientation, true));\n      setGuidesHiddenVertical(true);\n      saveGuidePositions(orientation);\n    }\n  }\n\n  function saveGuidePositions(orientation){\n    let guides = document.querySelectorAll(`.guide-${orientation}`);\n    let positions = [];\n    if(orientation === 'horizontal'){\n      guides.forEach(guide => {\n        positions.push(\n          guide.getBoundingClientRect().y - (window.innerHeight - pageSize.height) / 2\n        )})\n      setHorizontalGuidePositions(positions);\n    }else{\n      guides.forEach(guide => {\n        positions.push(\n          guide.getBoundingClientRect().x - (window.innerWidth - pageSize.width) / 2\n      )})\n      setVerticalGuidePositions(positions);\n    }\n    console.log(positions);\n    console.log(horizontalGuidePositions);\n    console.log(verticalGuidePositions);\n  }\n\n  const showGuides = (orientation) => {\n    if(orientation === 'horizontal'){\n      setHorizontalGuides(generateGuides(orientation, false));\n      setGuidesHiddenHorizontal(false);\n    }else {\n      setVerticalGuides(generateGuides(orientation, false));\n      setGuidesHiddenVertical(false);\n    }\n  }\n\n  const changePageSize = (width, height) => {\n    setPageSize({\n      width,\n      height\n    })\n  }\n\n  const customStyles = {\n    content: {\n      zIndex: \"50\",\n      textAlign: \"center\",\n      backgroundColor: \"rgba(0, 151, 144, 0.644)\"\n    }\n  };\n\n  return (\n    <Fragment>\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        >\n        <button className=\"icon-button modal-close\" onClick={closeModal}>\n          <FontAwesomeIcon icon={faTimesCircle} />\n        </button>\n        <img className=\"capture-img\" src={photo} height={pageSize.height} width={pageSize.width} alt='your poem silly!'/>\n      </Modal>\n\n      <Page\n        pageSize={pageSize}\n        horizontalGuides={horizontalGuides}\n        verticalGuides={verticalGuides}\n      />\n      <Settings\n        pageSize={pageSize}\n        showGuides={showGuides}\n        hideGuides={hideGuides}\n        guidesHiddenHorizontal={guidesHiddenHorizontal}\n        guidesHiddenVertical={guidesHiddenVertical}\n        capturePage={capturePage}\n      />\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}